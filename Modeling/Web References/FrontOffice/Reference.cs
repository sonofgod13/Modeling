//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3615.
// 
#pragma warning disable 1591

namespace Modeling.FrontOffice {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FrontOfficeImitationHelperSoap", Namespace="http://tempuri.org/")]
    public partial class FrontOfficeImitationHelper : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearOrdersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllOrdersAtDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChangedAtDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewAtDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FrontOfficeImitationHelper() {
            this.Url = global::Modeling.Properties.Settings.Default.Modeling_FrontOffice_FrontOfficeImitationHelper;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetDateCompletedEventHandler SetDateCompleted;
        
        /// <remarks/>
        public event ClearOrdersCompletedEventHandler ClearOrdersCompleted;
        
        /// <remarks/>
        public event GetAllOrdersAtDateCompletedEventHandler GetAllOrdersAtDateCompleted;
        
        /// <remarks/>
        public event GetChangedAtDateCompletedEventHandler GetChangedAtDateCompleted;
        
        /// <remarks/>
        public event GetNewAtDateCompletedEventHandler GetNewAtDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetDate(System.DateTime date) {
            object[] results = this.Invoke("SetDate", new object[] {
                        date});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetDateAsync(System.DateTime date) {
            this.SetDateAsync(date, null);
        }
        
        /// <remarks/>
        public void SetDateAsync(System.DateTime date, object userState) {
            if ((this.SetDateOperationCompleted == null)) {
                this.SetDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDateOperationCompleted);
            }
            this.InvokeAsync("SetDate", new object[] {
                        date}, this.SetDateOperationCompleted, userState);
        }
        
        private void OnSetDateOperationCompleted(object arg) {
            if ((this.SetDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDateCompleted(this, new SetDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearOrders", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClearOrders() {
            this.Invoke("ClearOrders", new object[0]);
        }
        
        /// <remarks/>
        public void ClearOrdersAsync() {
            this.ClearOrdersAsync(null);
        }
        
        /// <remarks/>
        public void ClearOrdersAsync(object userState) {
            if ((this.ClearOrdersOperationCompleted == null)) {
                this.ClearOrdersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearOrdersOperationCompleted);
            }
            this.InvokeAsync("ClearOrders", new object[0], this.ClearOrdersOperationCompleted, userState);
        }
        
        private void OnClearOrdersOperationCompleted(object arg) {
            if ((this.ClearOrdersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearOrdersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllOrdersAtDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Order[] GetAllOrdersAtDate(System.DateTime date) {
            object[] results = this.Invoke("GetAllOrdersAtDate", new object[] {
                        date});
            return ((Order[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllOrdersAtDateAsync(System.DateTime date) {
            this.GetAllOrdersAtDateAsync(date, null);
        }
        
        /// <remarks/>
        public void GetAllOrdersAtDateAsync(System.DateTime date, object userState) {
            if ((this.GetAllOrdersAtDateOperationCompleted == null)) {
                this.GetAllOrdersAtDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllOrdersAtDateOperationCompleted);
            }
            this.InvokeAsync("GetAllOrdersAtDate", new object[] {
                        date}, this.GetAllOrdersAtDateOperationCompleted, userState);
        }
        
        private void OnGetAllOrdersAtDateOperationCompleted(object arg) {
            if ((this.GetAllOrdersAtDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllOrdersAtDateCompleted(this, new GetAllOrdersAtDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChangedAtDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Order[] GetChangedAtDate(System.DateTime date) {
            object[] results = this.Invoke("GetChangedAtDate", new object[] {
                        date});
            return ((Order[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChangedAtDateAsync(System.DateTime date) {
            this.GetChangedAtDateAsync(date, null);
        }
        
        /// <remarks/>
        public void GetChangedAtDateAsync(System.DateTime date, object userState) {
            if ((this.GetChangedAtDateOperationCompleted == null)) {
                this.GetChangedAtDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChangedAtDateOperationCompleted);
            }
            this.InvokeAsync("GetChangedAtDate", new object[] {
                        date}, this.GetChangedAtDateOperationCompleted, userState);
        }
        
        private void OnGetChangedAtDateOperationCompleted(object arg) {
            if ((this.GetChangedAtDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChangedAtDateCompleted(this, new GetChangedAtDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewAtDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Order[] GetNewAtDate(System.DateTime date) {
            object[] results = this.Invoke("GetNewAtDate", new object[] {
                        date});
            return ((Order[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNewAtDateAsync(System.DateTime date) {
            this.GetNewAtDateAsync(date, null);
        }
        
        /// <remarks/>
        public void GetNewAtDateAsync(System.DateTime date, object userState) {
            if ((this.GetNewAtDateOperationCompleted == null)) {
                this.GetNewAtDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewAtDateOperationCompleted);
            }
            this.InvokeAsync("GetNewAtDate", new object[] {
                        date}, this.GetNewAtDateOperationCompleted, userState);
        }
        
        private void OnGetNewAtDateOperationCompleted(object arg) {
            if ((this.GetNewAtDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewAtDateCompleted(this, new GetNewAtDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Order {
        
        private int orderIDField;
        
        private string nameField;
        
        private System.DateTime doneDateField;
        
        private bool isExpressField;
        
        private int[] productCountField;
        
        /// <remarks/>
        public int OrderID {
            get {
                return this.orderIDField;
            }
            set {
                this.orderIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime doneDate {
            get {
                return this.doneDateField;
            }
            set {
                this.doneDateField = value;
            }
        }
        
        /// <remarks/>
        public bool isExpress {
            get {
                return this.isExpressField;
            }
            set {
                this.isExpressField = value;
            }
        }
        
        /// <remarks/>
        public int[] ProductCount {
            get {
                return this.productCountField;
            }
            set {
                this.productCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SetDateCompletedEventHandler(object sender, SetDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ClearOrdersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllOrdersAtDateCompletedEventHandler(object sender, GetAllOrdersAtDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllOrdersAtDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllOrdersAtDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetChangedAtDateCompletedEventHandler(object sender, GetChangedAtDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChangedAtDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChangedAtDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetNewAtDateCompletedEventHandler(object sender, GetNewAtDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewAtDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewAtDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Order[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Order[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591